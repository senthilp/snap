{"name":"snap","google":"","note":"Don't delete this file! It's used internally to help with page regeneration.","tagline":"snapping made easy","body":"#snap\r\nsnap is a JQuery plugin inspired from HTML5 [photobooth demo](http://html5-demos.appspot.com/static/getusermedia/photobooth.html) \r\nto make a DOM element snapable i.e. make the element camera enabled. It uses **navigator.getUserMedia** API for \r\nsupported browsers to access the computer's camera and stream the data to video element. Users can then click a picture \r\nwith the provided interface and that image is updated in the DOM element. If a server URL is provided then the image \r\nblob will also be posted to the server for saving and persistence.\r\n\r\nFor browsers which do not support navigator.getUserMedia API a default user avatar icon is displayed. The plugin also \r\nassumes that a body element is present in the page. Please refer to [index.html](https://github.com/senthilp/snap/blob/master/index.html) \r\nfor a working demo.\r\n\r\n**NOTE:** snap plugin depends on a small [**canvas-to-blob**](https://github.com/blueimp/JavaScript-Canvas-to-Blob) polyfill \r\nAPI for browsers which do not support the canvas element toBlob native function. The API is included in the plugin itself.\r\n\r\nThe snap plugin is pretty simple to invoke\r\n\r\n    // Basic, without any options\r\n    $('.avatar').snap();\r\n    \r\n    // Fully loaded, with all options\r\n    $('.avatar').snap({\r\n      avatarIcon: \"http://p.ebaystatic.com/aw/pics/s.gif\",\r\n      cameraIcon: \"http://thumbs2.ebaystatic.com/pict/1907167068094040_1.jpg\",\r\n      dimension: 70,\r\n      url: \"/picman/upload.php\",\r\n      imageType: \"image/png\",\r\n      callbacks: {\r\n        successCallback: function() {\r\n          $('.status').text('Image upload is successful');\r\n        },\r\n        failureCallback: function() {\r\n          $('.status').text('Image upload failed');\r\n        },\r\n        progressCallback: function() {\r\n          $('.status').text('Image upload WIP');\r\n        }\r\n      },\t\r\n      errorSelector: \".error\", \r\n      errorMessage: \"There was an error connecting to the camera\",\r\n      waitMessage: \"Please wait...\"\r\n    });\r\n\r\n##Options\r\n###avatarIcon\r\n**Optional**\r\n<br/>\r\nThe user avatar icon to display for non supporting browsers, if not provided plugin uses [default](http://i.ebayimg.com/00/s/MTEyWDE1MA==/$T2eC16hHJHoE9n3KhWjoBQMcCKc!(w~~60_14.JPG) \r\nuser icon \r\n###cameraIcon\r\n**Optional**\r\n<br/>\r\nThe camera icon to display for supporting browsers, If not provided plugin uses [default](http://i.ebayimg.com/00/s/NTc1WDU4MA==/$T2eC16Z,!ysE9sy0i2WDBQMcTZp8ew~~60_14.JPG) \r\ncamera icon\r\n###dimension\r\n**Optional**\r\n<br/>\r\nThe square dimension of the container element to be made snapable, default value 64px\r\n###url\r\n**Optional**\r\n<br/>\r\nThe REST url end point to persist (save) the image\r\n###imageType\r\n**Optional**\r\n<br/>\r\nThe type of the image, default value image/png\r\n###callbacks\r\n**Optional**\r\n<br/>\r\na JSON for callbacks when the image is been uploaded to the server\r\n###successCallback\r\n**Optional**\r\n<br/>\r\nSuccess callback when the image is successfully uploaded\r\n###failureCallback\r\n**Optional**\r\n<br/>\r\nFailure callback when the image is upload fails\r\n###progressCallback\r\n**Optional**\r\n<br/>\r\nProgress callback to be executed when the image is being uploaded\r\n###errorSelector\r\n**Optional**\r\n<br/>\r\nThe error DOM selector to be shown when an error occurs, default the error is shown in the container element\r\n###errorMessage\r\n**Optional**\r\n<br/>\r\nThe error message to be displayed in the container when no errorSelector, default \"Sorry, there was a problem connecting to camera\"\r\n###waitMessage\r\n**Optional**\r\n<br/>\r\nthe wait message to be alerted when user clicks to activate camera during a picture upload, default \"Please wait until \r\nthe save is complete\"\r\n"}